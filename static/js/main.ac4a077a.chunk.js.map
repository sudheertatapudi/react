{"version":3,"sources":["js/reducers/index.js","js/constants/action-types.js","js/middleware/index.js","js/store/index.js","js/components/List.js","js/components/Form.js","js/actions/index.js","js/components/Posts.js","js/components/App.js","index.js"],"names":["initialState","articles","remoteArticles","rootReducer","state","action","type","Object","assign","concat","payload","forbiddenWords","forbiddenWordsMiddleware","dispatch","next","filter","word","title","includes","length","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","List","connect","map","el","key","id","ConnectedForm","props","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","addArticle","onSubmit","htmlFor","onChange","Component","Form","article","Post","getData","slice","fetch","then","response","json","App","className","render","document","getElementById"],"mappings":"uNAGMA,EAAe,CACjBC,SAAU,GACVC,eAAgB,IAoBHC,MAjBf,WAAoD,IAA/BC,EAA8B,uDAAtBJ,EAAcK,EAAQ,uCAEjD,MCVuB,gBDUnBA,EAAOC,KACAC,OAAOC,OAAO,GAAIJ,EAAO,CAC5BH,SAAUG,EAAMH,SAASQ,OAAOJ,EAAOK,WCXxB,gBDejBL,EAAOC,KACFC,OAAOC,OAAO,GAAIJ,EAAO,CAC9BF,eAAgBE,EAAMF,eAAeO,OAAOJ,EAAOK,WAIlDN,GEpBLO,EAAiB,CAAC,OAAQ,SAqBfC,MAnBjB,YAAiD,IAAbC,EAAY,EAAZA,SAChC,OAAO,SAASC,GACd,OAAO,SAAST,GAEd,GDRmB,gBCQfA,EAAOC,MAEWK,EAAeI,QAAO,SAAAC,GAAI,OAC1CX,EAAOK,QAAQO,MAAMC,SAASF,MAGlBG,OACZ,OAAON,EAAS,CAAEP,KAAM,mBAG9B,OAAOQ,EAAKT,M,QCbde,EAAiBC,OAAOC,sCAAwCC,IAKvDC,EAHDC,YAAYtB,EACtBiB,EAAeM,YAAgBd,EAAyBe,OCS7CC,EAFFC,aAZW,SAAAzB,GACtB,MAAO,CAAEH,SAAUG,EAAMH,YAWd4B,EARS,SAAC,GAAD,IAAG5B,EAAH,EAAGA,SAAH,OACpB,4BACGA,EAAS6B,KAAI,SAAAC,GAAE,OACd,wBAAIC,IAAKD,EAAGE,IAAKF,EAAGd,c,+CCApBiB,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACD/B,MAAQ,CACXa,MAAO,IAET,EAAKmB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBANH,E,yDASNE,GACXC,KAAKC,SAAL,eAAiBF,EAAMG,OAAOT,GAAKM,EAAMG,OAAOC,U,mCAGrCJ,GACXA,EAAMK,iBADY,IAEV3B,EAAUuB,KAAKpC,MAAfa,MACRuB,KAAKL,MAAMU,WAAW,CAAE5B,UACxBuB,KAAKC,SAAS,CAAExB,MAAO,O,+BAEf,IACAA,EAAUuB,KAAKpC,MAAfa,MACR,OACE,0BAAM6B,SAAUN,KAAKF,cACnB,6BACE,2BAAOS,QAAQ,SAAf,SACA,2BACEzC,KAAK,OACL2B,GAAG,QACHU,MAAO1B,EACP+B,SAAUR,KAAKJ,gBAGnB,4BAAQ9B,KAAK,UAAb,a,GAjCoB2C,aA4CbC,EALFrB,YACX,MA9CF,SAA4BhB,GAC1B,MAAO,CACLgC,WAAY,SAAAM,GAAO,OAAItC,ECFhB,CAAEP,KLJc,cKIKI,QDEeyC,QA2ClCtB,CAGXK,GEhDWkB,EAAb,kDACE,WAAYjB,GAAQ,uCACZA,GAFV,gEAOIK,KAAKL,MAAMkB,YAPf,+BAWI,OACI,4BACGb,KAAKL,MAAMlC,SAAS6B,KAAI,SAAAC,GAAE,OACzB,wBAAIC,IAAKD,EAAGE,IAAKF,EAAGd,eAdhC,GAA0BgC,aA2BXpB,mBANf,SAAyBzB,GACrB,MAAO,CACLH,SAAUG,EAAMF,eAAeoD,MAAM,EAAG,OAM5C,CAAED,QD1BK,WACL,OAAO,SAASxC,GACd,OAAO0C,MAAM,8CACVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJ7C,EAAS,CAAEP,KLXM,cKWaI,QAASgD,UCmBlC7B,CAGbuB,GCXaO,G,MAjBH,kBACV,oCACE,yBAAKC,UAAU,aACb,wCACA,kBAAC,EAAD,OAEF,yBAAKA,UAAU,aACb,iDACA,kBAAC,EAAD,OAEF,yBAAKA,UAAU,aACb,yCACA,kBAAC,EAAD,UCZNC,iBACE,kBAAC,IAAD,CAAUrC,MAAOA,GACf,kBAAC,EAAD,OAEFsC,SAASC,eAAe,W","file":"static/js/main.ac4a077a.chunk.js","sourcesContent":["\r\nimport { ADD_ARTICLE , DATA_LOADED } from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n    articles: [],\r\n    remoteArticles: []\r\n  };\r\n  \r\n  function rootReducer(state = initialState, action) {\r\n\r\n    if (action.type === ADD_ARTICLE) {\r\n        return Object.assign({}, state, {\r\n            articles: state.articles.concat(action.payload)\r\n          });\r\n      }\r\n\r\n      if (action.type === DATA_LOADED) {\r\n        return Object.assign({}, state, {\r\n          remoteArticles: state.remoteArticles.concat(action.payload)\r\n        });\r\n      }\r\n\r\n    return state;\r\n  };\r\n  \r\n  export default rootReducer;","export const ADD_ARTICLE = \"ADD_ARTICLE\";\r\nexport const DATA_LOADED = \"DATA_LOADED\";","import { ADD_ARTICLE } from \"../constants/action-types\";\r\n\r\nconst forbiddenWords = [\"spam\", \"money\"];\r\n\r\nfunction forbiddenWordsMiddleware({ dispatch }) {\r\n    return function(next){\r\n      return function(action){\r\n        // do your stuff\r\n        if (action.type === ADD_ARTICLE) {\r\n        \r\n            const foundWord = forbiddenWords.filter(word =>\r\n              action.payload.title.includes(word)\r\n            );\r\n    \r\n            if (foundWord.length) {\r\n              return dispatch({ type: \"FOUND_BAD_WORD\" });\r\n            }\r\n          }\r\n        return next(action);\r\n      }\r\n    }\r\n  }\r\n\r\n  export default forbiddenWordsMiddleware;","import { createStore , applyMiddleware , compose   } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport forbiddenWordsMiddleware from '../middleware/index';\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer,\r\n    storeEnhancers(applyMiddleware(forbiddenWordsMiddleware,thunk)) );\r\n\r\nexport default store;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { articles: state.articles };\r\n};\r\n\r\nconst ConnectedList = ({ articles }) => (\r\n  <ul>\r\n    {articles.map(el => (\r\n      <li key={el.id}>{el.title}</li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst List = connect(mapStateToProps)(ConnectedList);\r\n\r\nexport default List;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addArticle } from \"../actions/index\";\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addArticle: article => dispatch(addArticle(article))\r\n  };\r\n}\r\n\r\nclass ConnectedForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { title } = this.state;\r\n    this.props.addArticle({ title });\r\n    this.setState({ title: \"\" });\r\n  }\r\n  render() {\r\n    const { title } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={title}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">SAVE</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst Form = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ConnectedForm);\r\n\r\nexport default Form;","\r\nimport { ADD_ARTICLE , DATA_LOADED } from \"../constants/action-types\";\r\n\r\nexport function addArticle(payload) {\r\n    return { type: ADD_ARTICLE, payload }\r\n  };\r\n \r\n  export function getData() {\r\n    return function(dispatch) {\r\n      return fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n        .then(response => response.json())\r\n        .then(json => {\r\n          dispatch({ type: DATA_LOADED, payload: json });\r\n        });\r\n    };\r\n  }","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getData } from \"../actions/index\";\r\n\r\nexport class Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // calling the new action creator\r\n    this.props.getData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <ul>\r\n          {this.props.articles.map(el => (\r\n            <li key={el.id}>{el.title}</li>\r\n          ))}\r\n        </ul>\r\n      );;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      articles: state.remoteArticles.slice(0, 10)\r\n    };\r\n  }\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n  { getData }\r\n)(Post);","import React from \"react\";\r\nimport List from \"./List\";\r\nimport Form from \"./Form\";\r\nimport Post from \"./Posts\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst App = () => (\r\n  <>\r\n    <div className=\"container\">\r\n      <h2>Articles</h2>\r\n      <List />\r\n    </div>\r\n    <div className=\"container\">\r\n      <h2>Add a new article</h2>\r\n      <Form />\r\n    </div>\r\n    <div className=\"container\">\r\n      <h2>API posts</h2>\r\n      <Post />\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./js/store/index\";\r\nimport App from \"./js/components/App\";\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}